<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hexo:基于nodejs的博客框架</title>
      <link href="/2019/07/08/hexo-ji-yu-nodejs-de-bo-ke-kuang-jia/"/>
      <url>/2019/07/08/hexo-ji-yu-nodejs-de-bo-ke-kuang-jia/</url>
      
        <content type="html"><![CDATA[<p>Hexo 是一个基于nodejs的博客框架，快速简洁高效，是他的特点。本文主要是我在安装使用部分的体验，官网 <a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">hexo.io</a> 有完整的文档可以使用。相比与2017刚刚接触的时候，体验顺畅了很多。总结起来，为什么又新开了一个博客，又开始使用hexo,主要还是想把从事前端的这三年做一些总结和梳理，使用hexo就是因为他够简单快速。</p><p>这个博客是依托在GitHub上的。目前访问的链接也是gitpage</p><h2 id="Github"><a href="#Github" class="headerlink" title="Github"></a>Github</h2><p>git 是软件工程师必备的的技能之一。关于git的介绍这里不在赘述。以下内容基于你有一定的技术能力储备（git、node等）。<br>当你依照官网的步骤在本地运行起 <code>hexo server</code> 也许你看到的是以下内容。对了，我这里都有以mac平台为基础。</p><pre class=" language-bash"><code class="language-bash">~/github/hexoblog » yarn dev                                                                                             zhuxiaopeng@zhuxiaopengdeMacBook-Proyarn run v1.5.1warning <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/package.json: No license field$ hexo g <span class="token operator">&amp;&amp;</span> hexo serverINFO  Start processingINFO  Files loaded <span class="token keyword">in</span> 274 msINFO  Generated: 2019/07/08/Hexo-基于nodejs的博客框架/index.htmlINFO  Generated: index.htmlINFO  2 files generated <span class="token keyword">in</span> 592 msINFO  Start processingINFO  Hexo is running at http://localhost:4000 <span class="token keyword">.</span> Press Ctrl+C to stop.</code></pre><p>这里你看到的 <code>yarn dev</code> 是我在package.json中写了以下内容</p><pre class=" language-json"><code class="language-json"><span class="token property">"scripts"</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token property">"dev"</span><span class="token operator">:</span> <span class="token string">"hexo g &amp;&amp; hexo server"</span><span class="token punctuation">,</span>    <span class="token property">"deploy"</span><span class="token operator">:</span> <span class="token string">"hexo clean &amp;&amp; hexo deploy"</span><span class="token punctuation">}</span></code></pre><p>yarn 类似于npm 这里也不展开。你可以使用npm。我注意执行 <code>hexo init</code> 之后，hexo 会使用yarn安装默认的依赖。并在项目目录中生成yarn.lock文件。</p><p>根目录下 _config.yml 是对生成静态文件的一个配置文件。yml 语法可以自行了解。</p><pre class=" language-yml"><code class="language-yml"># URL## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'url: https://orangeborning.github.io/ # 网址root: / # 网站根目录permalink: :year/:month/:day/:title/ # 文章的 永久链接 格式permalink_defaults: # 永久链接中各部分的默认值    # Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy:  type: git  repo: https://github.com/OrangeBorning/OrangeBorning.github.io.git #库（Repository）地址  branch: master #publ分支名称。如果您使用的是 GitHub 或 GitCafe 的话，程序会尝试自动检测。ished  # message: [message] 自定义提交信息 (默认为 Site updated: {{ now('YYYY-MM-DD HH:mm:ss') }})</code></pre><p>这里要注意将 deploy 部分换成你的github仓库地址。URL部分，根目录建议使用默认的。</p><p>使用官网文档可以很顺畅的完成这里的操作。</p><h2 id="Themes"><a href="#Themes" class="headerlink" title="Themes"></a>Themes</h2><p>官方默认给你安装了一个主题，主题在 <code>/themes</code> 下，如果你和我一样不喜欢他的样子，你可以在<a href="https://hexo.io/themes/" target="_blank" rel="noopener">主题市场</a>里找找看有没有喜欢的。当然你也可以自己写一个主题。<br>安装一个新的 theme 你可以在市场找到合适的后，点击你喜欢的主题的名称前往他的 github 地址。在你的项目根目录下运行</p><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> clone https://github.com/kinggozhang/hexo-theme-ace.git themes/ace</code></pre><p>这样就会安装你需要的主题。</p><pre class=" language-yml"><code class="language-yml"># Extensions## Plugins: https://hexo.io/plugins/## Themes: https://hexo.io/themes/theme: ace # landscape # 当前主题名称。值为false时禁用主题</code></pre><p>修改配置文件下的 theme 字段内容为你安装到 <code>/themes/</code> 下到目录名</p><p>不同的主题下作者有提供自定义的配置，你可以在主题下找到另一个 <code>_config.yml</code> 这个配置详情看对应主题的文档</p>]]></content>
      
      
      <categories>
          
          <category> sss </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sss </tag>
            
            <tag> Sticky </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
