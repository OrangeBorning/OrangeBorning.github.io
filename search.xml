<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>社会工程学浅析</title>
      <link href="/2019/07/10/she-hui-gong-cheng-xue-qian-xi/"/>
      <url>/2019/07/10/she-hui-gong-cheng-xue-qian-xi/</url>
      
        <content type="html"><![CDATA[<h2 id="传奇黑客"><a href="#传奇黑客" class="headerlink" title="传奇黑客"></a>传奇黑客</h2><p><a href="https://en.wikipedia.org/wiki/Kevin_Mitnick" target="_blank" rel="noopener">凯文·米特尼克</a></p><h2 id="概述简介"><a href="#概述简介" class="headerlink" title="概述简介"></a>概述简介</h2><ul><li>狭义工程学：依赖网络、目标往往不很明确、不需要了解其他行业信息</li><li>广义工程学：目标明确、有针对性的计划、不仅仅依赖网络、了解行业术语</li></ul><p>工程学与黑客技术的区别，前者更多的是针对人的入侵</p><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p>社会工程学是一种通过对受害者心理弱点、本能反应、好奇心、信任、贪婪等心理陷阱进行诸如欺骗等手段取得利益的手法。</p><p>社会工程学是一种黑客攻击方法，利用欺骗等手段骗取对方信任，获取机密 情报。国内的社会工程学通常和人肉搜索进行联系起来，但实际上人肉搜索 并不等于社会工程学</p><p>社会工程学需要搜集大量的信息针对对方的实际情况，进行心理战术的一种手法。</p><p>社会工程学定位在计算机信息安全工作链路的一个最脆弱的环节上——人。</p><p>总体上来说，社会工程学就是使人们顺从你的意愿、满足你的欲望的一门艺术 与学问。</p><h2 id="社工手段"><a href="#社工手段" class="headerlink" title="社工手段"></a>社工手段</h2><p><code>Google hacking</code>、<code>QQ</code>、<code>SNS</code>、<code>微博、博客</code>、<code>邮箱</code>、<code>域名查询</code>、<code>电商</code>、<code>交友网站</code>、<code>身份证信息</code>、<code>社工库</code>、<code>密码破解</code>、<a href="https://haveibeenpwned.com/" target="_blank" rel="noopener">haveibeenpwned</a></p><h3 id="广义社会工程学"><a href="#广义社会工程学" class="headerlink" title="广义社会工程学"></a>广义社会工程学</h3><p>利用人的心理弱点(如人的本能反应、好奇心、信任、贪婪)、规章制度的漏 洞进行诸如欺骗、伤害等手段，以期获得所需的信息(如计算机口令、银行账 户信息等) 。</p><h3 id="社会工程学特点"><a href="#社会工程学特点" class="headerlink" title="社会工程学特点"></a>社会工程学特点</h3><p>社会工程攻击是使人们顺从你的意愿、满足你的欲望的一门艺术与学问，是一种 利用人性脆弱点,贪婪等等的心理表现进行攻击。</p><ul><li>利用信息安全防护链条中最薄弱的环节;</li><li>通常以交谈、欺骗、假冒或口语等方式，从合法用户中套取用户系统的秘密;</li><li>熟练的社会工程师都是擅长进行信息收集的身体力行者，是一个很好的说客;</li><li>不能掌握人们在非正常意识以外的行为;</li><li>风险和影响很高，这些攻击难以跟踪和识别。</li></ul><h3 id="常用手段"><a href="#常用手段" class="headerlink" title="常用手段"></a>常用手段</h3><p>十度分割法 攻击者首先接触的群体，和其最终目标可能隔着十层之远;常用的技巧就是伪装友好。<br>学会说行话 研究行业术语，接触时以“专业化”的谈吐博得被骗者的好感。<br>借用等待时间 收集目标对象的各种轶事， 及其它“ 社交线索”以建 立信任感，这不过是又一 种心理暗示。<br>利用坏消息 利用坏消息来发送社会工 程学式的垃圾邮件、网络 钓鱼或其它类型的邮件。<br>滥用网民信任 利用网民对非常受欢迎的 社交网站的信任，发送仿 冒请求，实施钓鱼欺诈。<br>电话号码诈骗 利用电话号码欺诈术，在目标被叫者的来电显示屏上显示一个和主叫号码不一样的号码</p><h3 id="社会学、关系学"><a href="#社会学、关系学" class="headerlink" title="社会学、关系学"></a>社会学、关系学</h3><h3 id="人性的弱点"><a href="#人性的弱点" class="headerlink" title="人性的弱点"></a>人性的弱点</h3><p>虚荣心的利用<br> • 每个人都喜欢被赞扬具有很高的才智<br> • 装扮成虔诚的听众<br> • 你自负，且一直自认为怀才不遇吗?<br>同情心的滥用<br> • 建立信任，绕开必要的手续和验证机制<br> • 任务的紧迫度是一个很重要的因素<br> • 是否确定你给陌生人的帮助，没有给公司带来过困扰?<br>基于胁迫的请求<br> • 职位的胁迫<br> • 社会关系的胁迫<br> • 你敢于抵制不合理的请求吗?</p>]]></content>
      
      
      
        <tags>
            
            <tag> 安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>utopia-swagger</title>
      <link href="/2019/07/09/utopia-swagger/"/>
      <url>/2019/07/09/utopia-swagger/</url>
      
        <content type="html"><![CDATA[<p><a href="https://marketplace.visualstudio.com/items?itemName=zhuxiaopeng.utopia-swagger" target="_blank" rel="noopener">utopia-swagger</a>: nodejs swagger helper</p>]]></content>
      
      
      <categories>
          
          <category> vscode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vscode </tag>
            
            <tag> swagger </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iRobotjs</title>
      <link href="/2019/07/09/irobotjs/"/>
      <url>/2019/07/09/irobotjs/</url>
      
        <content type="html"><![CDATA[<p><a href="https://github.com/OrangeBorning/iRobotjs" target="_blank" rel="noopener">iRobotjs</a>: 企业微信群机器人js</p>]]></content>
      
      
      <categories>
          
          <category> node </category>
          
          <category> js </category>
          
          <category> es6 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> node </tag>
            
            <tag> js </tag>
            
            <tag> es6 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iRobotPy</title>
      <link href="/2019/07/09/irobotpy/"/>
      <url>/2019/07/09/irobotpy/</url>
      
        <content type="html"><![CDATA[<p><a href="https://github.com/OrangeBorning/iRobotPy" target="_blank" rel="noopener">iRobotPy</a>: 企业微信群机器人python</p>]]></content>
      
      
      <categories>
          
          <category> python3 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>javascript-bridge</title>
      <link href="/2019/07/09/javascript-bridge/"/>
      <url>/2019/07/09/javascript-bridge/</url>
      
        <content type="html"><![CDATA[<p><a href="http://zhuxiaopeng.top/jsBridge" target="_blank" rel="noopener">javascript-bridge</a>: H5和客户端之间使用到的桥接封装</p>]]></content>
      
      
      <categories>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML转PDF</title>
      <link href="/2019/07/09/html-zhuan-pdf/"/>
      <url>/2019/07/09/html-zhuan-pdf/</url>
      
        <content type="html"><![CDATA[<p>因为工作中涉及到了 html 转 pdf的需求，目前接触过的转换方式有 nodejs,java以及通过浏览器唤起系统打印。</p><h2 id="nodejs"><a href="#nodejs" class="headerlink" title="nodejs"></a>nodejs</h2><p>这里使用到了 pupeteer, 通过无头浏览器提供的api生成pdf，png等。这个方法就目前来说是效果很好的。相比起接触到到java转，因为对java的实现不了解，这里不做展开。pupeteer 实际上也是浏览器，可以理解为可以运行在服务端的浏览器。</p><h2 id="浏览器"><a href="#浏览器" class="headerlink" title="浏览器"></a>浏览器</h2><p>通过<code>ctrl + p</code> 或者 <code>command + p</code> 唤起打印，这里可以控制是否展示图片，是否需要页头页脚。</p>]]></content>
      
      
      
        <tags>
            
            <tag> html </tag>
            
            <tag> pdf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo:基于nodejs的博客框架</title>
      <link href="/2019/07/08/hexo-ji-yu-nodejs-de-bo-ke-kuang-jia/"/>
      <url>/2019/07/08/hexo-ji-yu-nodejs-de-bo-ke-kuang-jia/</url>
      
        <content type="html"><![CDATA[<p>Hexo 是一个基于nodejs的博客框架，快速简洁高效，是他的特点。本文主要是我在安装使用部分的体验，官网 <a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">hexo.io</a> 有完整的文档可以使用。相比与2017刚刚接触的时候，体验顺畅了很多。总结起来，为什么又新开了一个博客，又开始使用hexo,主要还是想把从事前端的这三年做一些总结和梳理，使用hexo就是因为他够简单快速。</p><p>这个博客是依托在GitHub上的。目前访问的链接也是gitpage</p><h2 id="Github"><a href="#Github" class="headerlink" title="Github"></a>Github</h2><p>git 是软件工程师必备的的技能之一。关于git的介绍这里不在赘述。以下内容基于你有一定的技术能力储备（git、node等）。<br>当你依照官网的步骤在本地运行起 <code>hexo server</code> 也许你看到的是以下内容。对了，我这里都有以mac平台为基础。</p><pre class=" language-bash"><code class="language-bash">~/github/hexoblog » yarn dev                                                                                             zhuxiaopeng@zhuxiaopengdeMacBook-Proyarn run v1.5.1warning <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/package.json: No license field$ hexo g <span class="token operator">&amp;&amp;</span> hexo serverINFO  Start processingINFO  Files loaded <span class="token keyword">in</span> 274 msINFO  Generated: 2019/07/08/Hexo-基于nodejs的博客框架/index.htmlINFO  Generated: index.htmlINFO  2 files generated <span class="token keyword">in</span> 592 msINFO  Start processingINFO  Hexo is running at http://localhost:4000 <span class="token keyword">.</span> Press Ctrl+C to stop.</code></pre><p>这里你看到的 <code>yarn dev</code> 是我在package.json中写了以下内容</p><pre class=" language-json"><code class="language-json"><span class="token property">"scripts"</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token property">"dev"</span><span class="token operator">:</span> <span class="token string">"hexo g &amp;&amp; hexo server"</span><span class="token punctuation">,</span>    <span class="token property">"deploy"</span><span class="token operator">:</span> <span class="token string">"hexo clean &amp;&amp; hexo deploy"</span><span class="token punctuation">}</span></code></pre><p>yarn 类似于npm 这里也不展开。你可以使用npm。我注意执行 <code>hexo init</code> 之后，hexo 会使用yarn安装默认的依赖。并在项目目录中生成yarn.lock文件。</p><p>根目录下 _config.yml 是对生成静态文件的一个配置文件。yml 语法可以自行了解。</p><pre class=" language-yml"><code class="language-yml"># URL## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'url: https://orangeborning.github.io/ # 网址root: / # 网站根目录permalink: :year/:month/:day/:title/ # 文章的 永久链接 格式permalink_defaults: # 永久链接中各部分的默认值    # Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy:  type: git  repo: https://github.com/OrangeBorning/OrangeBorning.github.io.git #库（Repository）地址  branch: master #publ分支名称。如果您使用的是 GitHub 或 GitCafe 的话，程序会尝试自动检测。ished  # message: [message] 自定义提交信息 (默认为 Site updated: {{ now('YYYY-MM-DD HH:mm:ss') }})</code></pre><p>这里要注意将 deploy 部分换成你的github仓库地址。URL部分，根目录建议使用默认的。</p><p>使用官网文档可以很顺畅的完成这里的操作。</p><h2 id="Themes"><a href="#Themes" class="headerlink" title="Themes"></a>Themes</h2><p>官方默认给你安装了一个主题，主题在 <code>/themes</code> 下，如果你和我一样不喜欢他的样子，你可以在<a href="https://hexo.io/themes/" target="_blank" rel="noopener">主题市场</a>里找找看有没有喜欢的。当然你也可以自己写一个主题。<br>安装一个新的 theme 你可以在市场找到合适的后，点击你喜欢的主题的名称前往他的 github 地址。在你的项目根目录下运行</p><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> clone https://github.com/kinggozhang/hexo-theme-ace.git themes/ace</code></pre><p>这样就会安装你需要的主题。</p><pre class=" language-yml"><code class="language-yml"># Extensions## Plugins: https://hexo.io/plugins/## Themes: https://hexo.io/themes/theme: ace # landscape # 当前主题名称。值为false时禁用主题</code></pre><p>修改配置文件下的 theme 字段内容为你安装到 <code>/themes/</code> 下到目录名</p><p>不同的主题下作者有提供自定义的配置，你可以在主题下找到另一个 <code>_config.yml</code> 这个配置详情看对应主题的文档</p><h2 id="域名"><a href="#域名" class="headerlink" title="域名"></a>域名</h2><p>使用自己的域名需要你首先得有一个域名，具体购买配置可以自行搜索。然后通过CNAME将域名映射到你的gitpage</p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
